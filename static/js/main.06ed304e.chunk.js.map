{"version":3,"sources":["hooks/useToggleState.js","hooks/useInputState.js","EditTodoForm.js","Todo.js","TodoList.js","TodoForm.js","hooks/useLocalStorageState.js","TodoApp.js","hooks/useTodoState.js","App.js","reportWebVitals.js","index.js"],"names":["useToggle","initialVal","useState","state","setState","toggle","value","setValue","e","target","EditTodoForm","id","task","editTodo","isEditing","toggleEditForm","useInputState","handleChange","reset","onSubmit","preventDefault","style","marginLeft","wirth","TextField","onChange","margin","fullWidth","autoFocus","Todo","completed","removeTodo","toggleTodo","useToggleState","ListItem","height","Checkbox","tabIndex","checked","onClick","textDecoration","ListItemSecondaryAction","IconButton","aria-label","TodoList","todos","length","Paper","List","map","todo","i","Fragment","key","Divider","TodoForm","addTodo","padding","label","useLocalStorageState","defaultVal","val","JSON","parse","window","localStorage","getItem","String","useEffect","setItem","stringify","TodoApp","initialTodos","setTodos","newTodoText","uuid","todoId","newTodos","filter","updatedTodo","newTodo","useTodoState","backgroundColor","elevation","AppBar","color","position","Toolbar","Typography","Grid","container","justify","marginTop","item","xs","md","lg","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06ed304e.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction useToggle(initialVal = false) {\r\n    const [state, setState] = useState(initialVal);\r\n    const toggle = () => {\r\n        setState(!state);\r\n    }\r\n    return [state, toggle];\r\n}\r\n\r\nexport default useToggle;","import { useState } from 'react';\r\n\r\nexport default initialVal => {\r\n    const [value, setValue] = useState(initialVal);\r\n    const handleChange = e => {\r\n        setValue(e.target.value);\r\n    };\r\n    const reset = () => {\r\n        setValue(\"\");\r\n    };\r\n    return [value, handleChange, reset];\r\n}\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport useInputState from './hooks/useInputState';\r\n\r\n\r\nfunction EditTodoForm({ id, task, isEditing, editTodo, toggleEditForm }) {\r\n    const [value, handleChange, reset] = useInputState(task);\r\n    return (\r\n        <form onSubmit={(e) => {\r\n            e.preventDefault();\r\n            editTodo(id, value);\r\n            toggleEditForm();\r\n            reset();\r\n        }}\r\n            style={{ marginLeft: \"1rem\", wirth: \"50%\" }}\r\n\r\n        >\r\n            <TextField onChange={handleChange} margin=\"normal\" value={value} fullWidth autoFocus />\r\n        </form >\r\n    )\r\n}\r\n\r\nexport default EditTodoForm;","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport { Icon } from '@material-ui/core';\r\nimport useToggleState from './hooks/useToggleState';\r\nimport EditTodoForm from './EditTodoForm';\r\n\r\nfunction Todo({ id, task, completed, removeTodo, toggleTodo, editTodo }) {\r\n    const [isEditing, toggle] = useToggleState(false); // defaults to false either way\r\n    return (\r\n        <ListItem style={{ height: \"64px\" }}>\r\n            { isEditing ? <EditTodoForm editTodo={editTodo} id={id} task={task} toggleEditForm={toggle} /> : (\r\n                <>\r\n                    <Checkbox tabIndex={-1} checked={completed} onClick={() => toggleTodo(id)} />\r\n                    <ListItemText key={id} style={{ textDecoration: completed ? \"line-through\" : \"none\" }}>\r\n                        {task}\r\n                    </ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                        <IconButton aria-label='Delete' onClick={() => removeTodo(id)}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label='Edit' onClick={toggle} >\r\n                            <EditIcon />\r\n                        </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                </>\r\n            )}\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList({ todos, removeTodo, toggleTodo, editTodo }) {\r\n    if (todos.length) {\r\n        return (\r\n            < Paper >\r\n                <List>\r\n                    {todos.map((todo, i) => (\r\n                        <React.Fragment key={i}>\r\n                            <Todo editTodo={editTodo}\r\n                                toggleTodo={toggleTodo}\r\n                                removeTodo={removeTodo}\r\n                                {...todo} key={todo.id}\r\n                            />\r\n                            {i < todos.length - 1 && <Divider />}\r\n                        </React.Fragment>\r\n\r\n                    ))}\r\n                </List>\r\n\r\n            </Paper >\r\n        )\r\n    } return null;\r\n\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport useInputState from './hooks/useInputState';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction TodoForm({ addTodo }) {\r\n    const [value, handleChange, reset] = useInputState(\"\");\r\n\r\n    return (\r\n        <Paper style={{ margin: \"1rem 0\", padding: \"0 1rem\" }}>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                addTodo(value);\r\n                reset();\r\n            }}>\r\n                <TextField value={value} onChange={handleChange} margin=\"normal\" label=\"Add New Todo\" fullWidth />\r\n            </form>\r\n        </Paper >\r\n    )\r\n}\r\n\r\nexport default TodoForm;","import { useEffect, useState } from 'react';\r\n\r\nfunction useLocalStorageState(key, defaultVal) {\r\n    // make piece of state based of value in localstorage (or default)\r\n    const [state, setState] = useState(() => {\r\n        let val;\r\n        try {\r\n            val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\r\n        } catch (e) {\r\n            val = defaultVal;\r\n        }\r\n        return val;\r\n    });\r\n    // use useEffect to update localstorage when state changes:\r\n    useEffect(() => {\r\n        window.localStorage.setItem(key, JSON.stringify(state));\r\n    }, [state]);\r\n    return [state, setState];\r\n}\r\n\r\nexport default useLocalStorageState;","\r\nimport TodoList from './TodoList';\r\nimport TodoForm from './TodoForm';\r\nimport useTodoState from './hooks/useTodoState';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nfunction TodoApp() {\r\n    const initialTodos = \"[]\";\r\n    const { todos, addTodo, removeTodo, toggleTodo, editTodo } = useTodoState(initialTodos);\r\n\r\n    return (\r\n        <Paper style={{\r\n            padding: 0,\r\n            margin: 0,\r\n            height: \"100vh\",\r\n            backgroundColor: '#fafafa'\r\n        }} elevation={0}>\r\n            <AppBar color='primary' position='static' style={{ height: '64px' }}>\r\n                <Toolbar>\r\n                    <Typography color='inherit'>TODOS WITH HOOKS</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Grid container justify=\"center\" style={{ marginTop: \"1rem\" }}>\r\n                <Grid item xs={11} md={8} lg={4}>\r\n                    <TodoForm addTodo={addTodo} />\r\n                    <TodoList todos={todos} removeTodo={removeTodo} toggleTodo={toggleTodo} editTodo={editTodo} />\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Paper>\r\n\r\n    );\r\n}\r\n\r\nexport default TodoApp;","import useLocalStorageState from './useLocalStorageState';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport default initialTodos => {\r\n    const [todos, setTodos] = useLocalStorageState(\"todos\", initialTodos);\r\n    return {\r\n        todos,\r\n        addTodo: newTodoText => {\r\n            setTodos([...todos, { id: uuid(), task: newTodoText, completed: false }]);\r\n        },\r\n        removeTodo: todoId => {\r\n            const newTodos = todos.filter(todo => todoId !== todo.id);\r\n            setTodos(newTodos);\r\n        },\r\n\r\n        toggleTodo: todoId => {\r\n            const updatedTodo = todos.map(todo =>\r\n                todo.id === todoId ? { ...todo, completed: !todo.completed } : todo\r\n            );\r\n            setTodos(updatedTodo);\r\n        },\r\n\r\n        editTodo: (todoId, newTodo) => {\r\n            const updatedTodo = todos.map(todo =>\r\n                todo.id === todoId ? { ...todo, task: newTodo } : todo\r\n            );\r\n            setTodos(updatedTodo);\r\n        }\r\n    }\r\n\r\n}\r\n","import TodoApp from './TodoApp';\n\nfunction App() {\n  return (\n    <div>\n      <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}